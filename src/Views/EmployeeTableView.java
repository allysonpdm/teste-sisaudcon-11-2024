/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Controllers.Dtos.PaginateResponse;
import Controllers.Dtos.EmployeeDto;
import Controllers.EmployeeController;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author phoen
 */
public class EmployeeTableView extends javax.swing.JFrame {

    private EmployeeController controller;
    private String[] columnNames = {
        "ID",
        "Nome",
        "Data de admissão",
        "Salário",
        "Status",
        "Criado em",
        "Atualizado em",
        "",
        ""
    };
    private int currentPage = 1;
    private int perPage = 10;
    private PaginateResponse response;
    private int totalPages;
    private List<EmployeeDto> employees;
    private Long userId;

    /**
     * Creates new form UserTable
     */
    public EmployeeTableView(Long userId) {
        this.userId = userId;
        controller = new EmployeeController();
        response = performSearch(null, 1, 10);
        extractData(response);
        initComponents();
        fillTable(response);
        setLocationRelativeTo(null);
    }

    @SuppressWarnings("empty-statement")
    private void fillTable(PaginateResponse response) {

        extractData(response);
        DefaultTableModel model = new DefaultTableModel(columnNames, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        for (EmployeeDto employee : employees) {
            Object[] row = {
                employee.getId(),
                employee.getName(),
                employee.getFormattedHireDate(),
                employee.getFormattedSalary(),
                employee.getFormmattedStatus(),
                employee.getFormattedCreatedAt(),
                employee.getFormattedUpdatedAt(),
                "Editar",
                "Apagar"
            };
            model.addRow(row);
        }

        table.setModel(model);

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        centerRenderer.setForeground(Color.BLUE);
        
        table.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
        table.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);

        if (response.getTotal() == 0) {
            updateLabelCurrentPage(0);
        } else {
            updateLabelCurrentPage(currentPage);
        }
        updateLabelTotalRegisters(response.getTotal());
        updateLabelTotalPages(totalPages);
        toggleBtnLastActivation(currentPage);
        toggleBtnNextActivation(currentPage, totalPages);
    }

    private PaginateResponse performSearch(String search, Integer currentPage, Integer perPage) {
        return controller.listPaginate(search, userId, currentPage, perPage);
    }

    private void extractData(PaginateResponse response) {
        String errorMessage = response.getErrorMessage();
        if (errorMessage != null) {
            JOptionPane.showMessageDialog(null, errorMessage, "Erro", JOptionPane.ERROR_MESSAGE);
        }
        employees = (List<EmployeeDto>) response.getList();
        totalPages = getTotalPages(response.getTotal());
        currentPage = response.getCurrentPage();

    }

    private Integer getTotalPages(Integer totalUsers) {
        return (totalUsers + perPage - 1) / perPage;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fieldSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        fieldPerPage = new javax.swing.JComboBox<>();
        btnNext = new javax.swing.JButton();
        bntLast = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        labelCurrentPage = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        labelTotalPages = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        labelTotalRegisters = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciando funcionários");

        jPanel1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jPanel1ComponentAdded(evt);
            }
        });

        fieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldSearchActionPerformed(evt);
            }
        });

        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        table.setAutoCreateRowSorter(true);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table);

        jLabel1.setText("Registros por página");

        fieldPerPage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "50", "100" }));
        fieldPerPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPerPageActionPerformed(evt);
            }
        });

        btnNext.setText("Próxima");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        bntLast.setText("Anterior");
        bntLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntLastActionPerformed(evt);
            }
        });

        jLabel2.setText("Página");

        labelCurrentPage.setText(Integer.toString(currentPage));

        jLabel4.setText("/");

        labelTotalPages.setText(Integer.toString(totalPages));

        jLabel5.setText("Total de registros:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(fieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 309, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldPerPage, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelCurrentPage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTotalPages)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTotalRegisters, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntLast)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(jLabel1)
                    .addComponent(fieldPerPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNext)
                            .addComponent(bntLast)
                            .addComponent(jLabel2)
                            .addComponent(labelCurrentPage)
                            .addComponent(jLabel4)
                            .addComponent(labelTotalPages)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(labelTotalRegisters, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldSearchActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        response = performSearch(fieldSearch.getText(), 1, perPage);
        fillTable(response);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void fieldPerPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPerPageActionPerformed
        this.perPage = getPerPageSelected();
        response = performSearch(fieldSearch.getText(), 1, perPage);
        fillTable(response);
    }//GEN-LAST:event_fieldPerPageActionPerformed

    private Integer getPerPageSelected() {
        return Integer.parseInt((String) fieldPerPage.getSelectedItem());
    }

    private void bntLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntLastActionPerformed
        this.currentPage = (currentPage - 1) <= 0
                ? 1
                : currentPage - 1;
        response = performSearch(fieldSearch.getText(), currentPage, perPage);
        fillTable(response);
    }//GEN-LAST:event_bntLastActionPerformed

    private void jPanel1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jPanel1ComponentAdded
        toggleBtnLastActivation(currentPage);
    }//GEN-LAST:event_jPanel1ComponentAdded

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        this.currentPage = (currentPage + 1) >= totalPages
                ? totalPages
                : currentPage + 1;
        response = performSearch(fieldSearch.getText(), currentPage, perPage);
        fillTable(response);
    }//GEN-LAST:event_btnNextActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int row = table.rowAtPoint(evt.getPoint());
        int column = table.columnAtPoint(evt.getPoint());
        EmployeeDto employee = employees.get(row);

        if (column == 7) {
            editEmployee(employee);
        }

        if (column == 8) {
            deleteEmployee(employee);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void editEmployee(EmployeeDto employee) {
        EmployeeFormView employeeFormView = new EmployeeFormView(employee, () -> {
            response = performSearch(fieldSearch.getText(), currentPage, perPage);
            fillTable(response);
        });
        employeeFormView.setTitle("Editar funcionário - ID: " + employee.getId());
        employeeFormView.setVisible(true);
    }

    private void deleteEmployee(EmployeeDto employee) {
        String[] options = {"Sim", "Não"};
        int confirm = JOptionPane.showOptionDialog(
                null,
                "Você tem certeza que deseja excluir o funcionário '" + employee.getName() + "'?\r\nEssa ação não podera ser desfeita.",
                "Confirme a sua ação",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[1]
        );
        if (confirm == JOptionPane.YES_OPTION) {
            boolean isSuccess = controller.delete(employee.getId());
            response = performSearch(fieldSearch.getText(), currentPage, perPage);
            fillTable(response);
        }
    }

    private void toggleBtnLastActivation(Integer currentPage) {
        boolean disable = currentPage == 1;
        bntLast.setEnabled(!disable);
    }

    private void toggleBtnNextActivation(Integer currentPage, Integer totalPages) {
        boolean disable = totalPages == currentPage || totalPages == 0;
        btnNext.setEnabled(!disable);
    }

    private void updateLabelCurrentPage(Integer number) {
        labelCurrentPage.setText(Integer.toString(number));
    }

    private void updateLabelTotalRegisters(Integer number) {
        labelTotalRegisters.setText(Integer.toString(number));
    }

    private void updateLabelTotalPages(Integer number) {
        labelTotalPages.setText(Integer.toString(number));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new EmployeeTableView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> fieldPerPage;
    private javax.swing.JTextField fieldSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelCurrentPage;
    private javax.swing.JLabel labelTotalPages;
    private javax.swing.JLabel labelTotalRegisters;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
